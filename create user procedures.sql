-- procedure 1
CREATE PROCEDURE SP_GET_USER @IDNP CHAR(13), @PASSWORD VARCHAR(255)
AS
SELECT A.ID_UTILIZATOR, IDNP, NUME, PRENUME, PATRONIMIC, DATA_NASTERII, EMAIL, TELEFON, ID_ROL, A.ID_STATUT AS STATUT_UTILIZATOR,
CONT_ID, PAROLA
FROM UTILIZATORI A
JOIN CONTURI B
ON A.ID_UTILIZATOR = B.ID_UTILIZATOR
WHERE IDNP = @IDNP AND PAROLA = @PASSWORD
GO

-- procedure 2
CREATE PROCEDURE SP_GET_USER_STATUS @USER_ID INT
AS
SELECT STATUT FROM STATUTURI
WHERE ID_STATUT IN (SELECT ID_STATUT FROM UTILIZATORI WHERE ID_UTILIZATOR = @USER_ID);
GO

-- procedure 3
CREATE PROCEDURE SP_GET_USER_ROLE @USER_ID INT
AS
SELECT ROL FROM ROLURI_UTILIZATOR
WHERE ID_ROL IN (SELECT ID_ROL FROM UTILIZATORI WHERE ID_UTILIZATOR = @USER_ID);
GO

-- procedure 4
CREATE PROCEDURE SP_GET_USER_DETAILS
AS
SELECT A.*, SERIA_BULETIN, DATA_EMITERII_BULETIN, DATA_EXPIRARII_BULETIN, B.ID_LOCALITATE, C.DENUMIRE, C.RAION, B.ADRESA
FROM UTILIZATORI A
LEFT JOIN DETALII_UTILIZATOR B
ON A.ID_UTILIZATOR = B.ID_UTILIZATOR
LEFT JOIN LOCALITATI C
ON B.ID_LOCALITATE = C.ID_LOCALITATE
GO

-- procedure 5
CREATE PROCEDURE SP_GET_AUTH_USER_DETAILS @USER_ID INT
AS
SELECT A.SERIA_BULETIN, A.DATA_EMITERII_BULETIN, A.DATA_EXPIRARII_BULETIN, A.ID_LOCALITATE, B.RAION, B.DENUMIRE, A.ADRESA
FROM DETALII_UTILIZATOR A
JOIN LOCALITATI B
ON A.ID_LOCALITATE = B.ID_LOCALITATE
WHERE A.ID_UTILIZATOR = @USER_ID
GO

-- procedure 6
CREATE PROCEDURE SP_GET_AUTH_USER_PASSWORD
	@ID_CONT INT
AS
SELECT PAROLA
FROM CONTURI
WHERE CONT_ID = @ID_CONT
GO

-- procedure 7
CREATE PROCEDURE SP_UPDATE_AUTH_USER_PASSWORD
	@ID_CONT INT,
	@PASSWORD VARCHAR(255)
AS
UPDATE CONTURI
SET PAROLA = @PASSWORD
WHERE CONT_ID = @ID_CONT
GO

-- procedure 8
CREATE PROCEDURE SP_UPDATE_AUTH_USER_EMAIL 
	@USER_ID INT,
	@EMAIL VARCHAR(255)
AS
UPDATE UTILIZATORI
SET EMAIL = @EMAIL
WHERE ID_UTILIZATOR = @USER_ID
GO

-- procedure 9
CREATE PROCEDURE SP_UPDATE_AUTH_USER_PHONE
	@USER_ID INT,
	@PHONE VARCHAR(15)
AS
UPDATE UTILIZATORI
SET TELEFON = @PHONE
WHERE ID_UTILIZATOR = @USER_ID
GO

-- procedure 10
CREATE PROCEDURE SP_UPDATE_AUTH_USER_CITY
	@USER_ID INT,
	@ID_LOCALITATE INT
AS
UPDATE DETALII_UTILIZATOR
SET ID_LOCALITATE = @ID_LOCALITATE
WHERE ID_UTILIZATOR = @USER_ID;
GO

-- procedurre 11
CREATE PROCEDURE SP_UPDATE_AUTH_USER_ADDRESS
	@USER_ID INT,
	@ADDRESS VARCHAR(100)
AS
UPDATE DETALII_UTILIZATOR
SET ADRESA = @ADDRESS
WHERE ID_UTILIZATOR = @USER_ID;
GO

-- procedure 12
CREATE PROCEDURE SP_INSER_NEW_USER
	@IDNP CHAR(13), 
	@NUME VARCHAR(100),
	@PRENUME VARCHAR(100),
	@PATRONIMIC VARCHAR(100),
	@DATA_NASTERII DATETIME,
	@EMAIL VARCHAR(100),
	@TELEFON VARCHAR(15),
	@ID_ROL INT,
	@ID_STATUT INT,
	@SERIA_BULETIN CHAR(9),
	@DATA_EMITERII DATETIME,
	@DATA_EXPIRARII DATETIME,
	@ID_LOCALITATE INT,
	@ADRESA VARCHAR(100),
	@PAROLA VARCHAR(255)
AS
BEGIN
	BEGIN TRAN;

	DECLARE @USER_ID INT;

	INSERT INTO UTILIZATORI (IDNP, NUME, PRENUME, PATRONIMIC, DATA_NASTERII, EMAIL, TELEFON, ID_ROL, ID_STATUT)
	VALUES
	(@IDNP, @NUME, @PRENUME, @PATRONIMIC, @DATA_NASTERII, @EMAIL, @TELEFON, @ID_ROL, @ID_STATUT);

	SET @USER_ID = (SELECT ID_UTILIZATOR FROM UTILIZATORI WHERE IDNP = @IDNP);

	INSERT INTO DETALII_UTILIZATOR (ID_UTILIZATOR, SERIA_BULETIN, DATA_EMITERII_BULETIN, DATA_EXPIRARII_BULETIN, ID_LOCALITATE, ADRESA)
	VALUES
	(@USER_ID, @SERIA_BULETIN, @DATA_EMITERII, @DATA_EXPIRARII, @ID_LOCALITATE, @ADRESA);

	INSERT INTO CONTURI (ID_UTILIZATOR, PAROLA)
	VALUES
	(@USER_ID, @PAROLA);

	IF @@ERROR <> 0
		BEGIN
			ROLLBACK;
			PRINT 'Tranzactie esuata';
		END
	ELSE
		BEGIN
			COMMIT;
			PRINT 'Tranzactie completata cu succes';
		END
END;
GO

-- procedure 13
CREATE PROCEDURE SP_UPDATE_USER
	@USER_ID INT,
	@IDNP CHAR(13), 
	@NUME VARCHAR(100),
	@PRENUME VARCHAR(100),
	@PATRONIMIC VARCHAR(100),
	--@DATA_NASTERII DATETIME,
	@EMAIL VARCHAR(100),
	@TELEFON VARCHAR(15),
	@ID_ROL INT,
	@ID_STATUT INT,
	@SERIA_BULETIN CHAR(9),
	--@DATA_EMITERII DATETIME,
	--@DATA_EXPIRARII DATETIME,
	@ID_LOCALITATE INT,
	@ADRESA VARCHAR(100)
AS
BEGIN
	BEGIN TRAN;

	UPDATE UTILIZATORI
	SET IDNP = @IDNP, NUME = @NUME, PRENUME = @PRENUME, PATRONIMIC = @PATRONIMIC, 
	EMAIL = @EMAIL, TELEFON = @TELEFON, ID_ROL = @ID_ROL,
	ID_STATUT = @ID_STATUT
	WHERE ID_UTILIZATOR = @USER_ID;

	UPDATE DETALII_UTILIZATOR
	SET SERIA_BULETIN = @SERIA_BULETIN, ID_LOCALITATE = @ID_LOCALITATE, ADRESA = @ADRESA
	WHERE ID_UTILIZATOR = @USER_ID;

	IF @@ERROR <> 0
		BEGIN
			ROLLBACK;
			PRINT 'Tranzactie esuata';
		END
	ELSE
		BEGIN
			COMMIT;
			PRINT 'Tranzactie completata cu succes';
		END
END;
GO